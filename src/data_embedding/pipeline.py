# src/recomind/data_embedding/pipeline.py

# No need for os or sys imports for path manipulation anymore.

# =============================================================================
# --- Main Application Imports ---
# These are standard package imports that work because we run as a module.
# =============================================================================
from .database_scanner import DatabaseScanner
from .description_generator import DescriptionGenerator
from .vector_store import VectorStore
from ..shared import config
from . import embedding_config 

def run_ingestion_pipeline():
    """
    The main function that orchestrates the entire ingestion process.
    """
    print(f"DEBUG: API Key Loaded✅" if embedding_config.OPENROUTER_API_KEY else "DEBUG: API Key Missing❌")
    
    print("--- Starting Ingestion Pipeline ---")

    # The rest of your function remains exactly the same...
    scanner = DatabaseScanner()
    tables_data = scanner.scan_tables()

    if not tables_data:
        print("Pipeline aborted: No table data was found by the scanner.")
        return

    generator = DescriptionGenerator()
    data_with_descriptions = generator.generate_for_tables(tables_data)

    if not data_with_descriptions:
        print("Pipeline aborted: No descriptions were generated by the LLM.")
        return

    vector_db = VectorStore()
    vector_db.save(data_with_descriptions)

    print("\n--- Ingestion Pipeline Completed Successfully! ---")


if __name__ == "__main__":
    run_ingestion_pipeline()